{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elian\\\\Downloads\\\\3D Rooms\\\\src\\\\app.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, Suspense, useRef, useEffect } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, PointerLockControls, PerspectiveCamera, OrthographicCamera, useGLTF, Html } from '@react-three/drei';\nimport './index.css';\n\n// Navigation component for room selection (using your original button style)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomNav = ({\n  rooms,\n  selectedRoom,\n  onSelectRoom\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-nav-container\",\n    children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `room-nav-item ${selectedRoom.id === room.id ? 'active' : ''}`,\n      onClick: () => onSelectRoom(room),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: room.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, room.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n// Component to load and display the 3D model for the selected suite.\n_c = RoomNav;\nconst SuiteModel = ({\n  modelPath\n}) => {\n  _s();\n  const {\n    scene\n  } = useGLTF(modelPath);\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: scene\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n_s(SuiteModel, \"o+hqw2nGnmzAsiWsKcbG4W2mWg4=\", false, function () {\n  return [useGLTF];\n});\n_c2 = SuiteModel;\nconst App = () => {\n  _s2();\n  // Room (suite) data.\n  const roomsData = [{\n    id: 1,\n    title: 'Suite 1',\n    modelPath: '/models/suite1.glb'\n  }, {\n    id: 2,\n    title: 'Suite 2',\n    modelPath: '/models/suite2.glb'\n  }, {\n    id: 3,\n    title: 'Suite 3',\n    modelPath: '/models/suite3.glb'\n  }];\n\n  // Selected room state.\n  const [selectedRoom, setSelectedRoom] = useState(roomsData[0]);\n\n  // Additional control states:\n  // controlMode: \"orbit\" for standard OrbitControls, \"person\" for first-person view.\n  const [controlMode, setControlMode] = useState(\"orbit\");\n  // displayMode: \"3D\" uses a PerspectiveCamera; \"2D\" uses an OrthographicCamera (overhead view).\n  const [displayMode, setDisplayMode] = useState(\"3D\");\n  // zoomFactor: used to adjust the camera's zoom.\n  const [zoomFactor, setZoomFactor] = useState(1);\n\n  // Ref for OrbitControls so we can reset when switching rooms.\n  const controlsRef = useRef();\n\n  // When the selected room changes, reset the OrbitControls (if in orbit mode).\n  useEffect(() => {\n    if (controlsRef.current && controlMode === \"orbit\") {\n      controlsRef.current.reset();\n    }\n  }, [selectedRoom, controlMode]);\n\n  // Functions to adjust zoom.\n  const zoomIn = () => setZoomFactor(prev => prev * 0.9);\n  const zoomOut = () => setZoomFactor(prev => prev / 0.9);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(RoomNav, {\n      rooms: roomsData,\n      selectedRoom: selectedRoom,\n      onSelectRoom: setSelectedRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setControlMode(prev => prev === \"orbit\" ? \"person\" : \"orbit\"),\n        children: [\"Toggle Control Mode (\", controlMode, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDisplayMode(prev => prev === \"3D\" ? \"2D\" : \"3D\"),\n        children: [\"Toggle Display Mode (\", displayMode, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomIn,\n        children: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomOut,\n        children: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"model-viewer\",\n      children: /*#__PURE__*/_jsxDEV(Canvas, {\n        children: [displayMode === \"3D\" ? /*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n          makeDefault: true,\n          position: [0, 0, 5 * zoomFactor],\n          fov: 75\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        // For 2D overhead view, we use an orthographic camera.\n        // The position and zoom values can be adjusted as needed.\n        _jsxDEV(OrthographicCamera, {\n          makeDefault: true,\n          position: [0, 50, 0],\n          zoom: 50 * zoomFactor,\n          near: 0.1,\n          far: 1000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n          intensity: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n          position: [10, 10, 10]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(Html, {\n            center: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading 3D Model...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 31\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(SuiteModel, {\n            modelPath: selectedRoom.modelPath\n          }, selectedRoom.modelPath, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), controlMode === \"orbit\" ? /*#__PURE__*/_jsxDEV(OrbitControls, {\n          ref: controlsRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(PointerLockControls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"Bjo7jRtW01BZ1WIIBksU9/c12Eo=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RoomNav\");\n$RefreshReg$(_c2, \"SuiteModel\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","Suspense","useRef","useEffect","Canvas","OrbitControls","PointerLockControls","PerspectiveCamera","OrthographicCamera","useGLTF","Html","jsxDEV","_jsxDEV","RoomNav","rooms","selectedRoom","onSelectRoom","className","children","map","room","id","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","SuiteModel","modelPath","_s","scene","object","_c2","App","_s2","roomsData","setSelectedRoom","controlMode","setControlMode","displayMode","setDisplayMode","zoomFactor","setZoomFactor","controlsRef","current","reset","zoomIn","prev","zoomOut","makeDefault","position","fov","zoom","near","far","intensity","fallback","center","ref","_c3","$RefreshReg$"],"sources":["C:/Users/elian/Downloads/3D Rooms/src/app.js"],"sourcesContent":["import React, { useState, Suspense, useRef, useEffect } from 'react';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { OrbitControls, PointerLockControls, PerspectiveCamera, OrthographicCamera, useGLTF, Html } from '@react-three/drei';\r\nimport './index.css';\r\n\r\n// Navigation component for room selection (using your original button style)\r\nconst RoomNav = ({ rooms, selectedRoom, onSelectRoom }) => {\r\n  return (\r\n    <div className=\"room-nav-container\">\r\n      {rooms.map((room) => (\r\n        <button\r\n          key={room.id}\r\n          className={`room-nav-item ${selectedRoom.id === room.id ? 'active' : ''}`}\r\n          onClick={() => onSelectRoom(room)}\r\n        >\r\n          <div className=\"room-title\">{room.title}</div>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Component to load and display the 3D model for the selected suite.\r\nconst SuiteModel = ({ modelPath }) => {\r\n  const { scene } = useGLTF(modelPath);\r\n  return <primitive object={scene} />;\r\n};\r\n\r\nconst App = () => {\r\n  // Room (suite) data.\r\n  const roomsData = [\r\n    { id: 1, title: 'Suite 1', modelPath: '/models/suite1.glb' },\r\n    { id: 2, title: 'Suite 2', modelPath: '/models/suite2.glb' },\r\n    { id: 3, title: 'Suite 3', modelPath: '/models/suite3.glb' },\r\n  ];\r\n\r\n  // Selected room state.\r\n  const [selectedRoom, setSelectedRoom] = useState(roomsData[0]);\r\n\r\n  // Additional control states:\r\n  // controlMode: \"orbit\" for standard OrbitControls, \"person\" for first-person view.\r\n  const [controlMode, setControlMode] = useState(\"orbit\");\r\n  // displayMode: \"3D\" uses a PerspectiveCamera; \"2D\" uses an OrthographicCamera (overhead view).\r\n  const [displayMode, setDisplayMode] = useState(\"3D\");\r\n  // zoomFactor: used to adjust the camera's zoom.\r\n  const [zoomFactor, setZoomFactor] = useState(1);\r\n\r\n  // Ref for OrbitControls so we can reset when switching rooms.\r\n  const controlsRef = useRef();\r\n\r\n  // When the selected room changes, reset the OrbitControls (if in orbit mode).\r\n  useEffect(() => {\r\n    if (controlsRef.current && controlMode === \"orbit\") {\r\n      controlsRef.current.reset();\r\n    }\r\n  }, [selectedRoom, controlMode]);\r\n\r\n  // Functions to adjust zoom.\r\n  const zoomIn = () => setZoomFactor((prev) => prev * 0.9);\r\n  const zoomOut = () => setZoomFactor((prev) => prev / 0.9);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* Room Navigation Bar */}\r\n      <RoomNav rooms={roomsData} selectedRoom={selectedRoom} onSelectRoom={setSelectedRoom} />\r\n\r\n      {/* Additional Control Panel for view toggles and zoom */}\r\n      <div className=\"control-panel\">\r\n        <button onClick={() => setControlMode((prev) => (prev === \"orbit\" ? \"person\" : \"orbit\"))}>\r\n          Toggle Control Mode ({controlMode})\r\n        </button>\r\n        <button onClick={() => setDisplayMode((prev) => (prev === \"3D\" ? \"2D\" : \"3D\"))}>\r\n          Toggle Display Mode ({displayMode})\r\n        </button>\r\n        <button onClick={zoomIn}>Zoom In</button>\r\n        <button onClick={zoomOut}>Zoom Out</button>\r\n      </div>\r\n\r\n      {/* 3D Model Viewer Container */}\r\n      <div className=\"model-viewer\">\r\n        <Canvas>\r\n          {/* Conditional Camera: use PerspectiveCamera for 3D, OrthographicCamera for 2D */}\r\n          {displayMode === \"3D\" ? (\r\n            <PerspectiveCamera makeDefault position={[0, 0, 5 * zoomFactor]} fov={75} />\r\n          ) : (\r\n            // For 2D overhead view, we use an orthographic camera.\r\n            // The position and zoom values can be adjusted as needed.\r\n            <OrthographicCamera\r\n              makeDefault\r\n              position={[0, 50, 0]}\r\n              zoom={50 * zoomFactor}\r\n              near={0.1}\r\n              far={1000}\r\n            />\r\n          )}\r\n          <ambientLight intensity={0.5} />\r\n          <pointLight position={[10, 10, 10]} />\r\n          <Suspense fallback={<Html center><div>Loading 3D Model...</div></Html>}>\r\n            {/* Using a key forces remounting when switching rooms.\r\n                Since useGLTF caches models, switching back will load from cache. */}\r\n            <SuiteModel key={selectedRoom.modelPath} modelPath={selectedRoom.modelPath} />\r\n          </Suspense>\r\n          {/* Conditional Controls: OrbitControls for \"orbit\" mode; PointerLockControls for \"person\" mode */}\r\n          {controlMode === \"orbit\" ? (\r\n            <OrbitControls ref={controlsRef} />\r\n          ) : (\r\n            <PointerLockControls />\r\n          )}\r\n        </Canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}