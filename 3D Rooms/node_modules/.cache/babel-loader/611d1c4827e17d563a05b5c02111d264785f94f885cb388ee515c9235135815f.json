{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elian\\\\Downloads\\\\3D Rooms\\\\src\\\\app.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, Suspense, useRef, useEffect } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, PerspectiveCamera, OrthographicCamera, useGLTF, Html } from '@react-three/drei';\nimport './index.css';\n\n// Navigation Component (using your original button style)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomNav = ({\n  rooms,\n  selectedRoom,\n  onSelectRoom\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-nav-container\",\n    children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `room-nav-item ${selectedRoom.id === room.id ? 'active' : ''}`,\n      onClick: () => onSelectRoom(room),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: room.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, room.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n// Component to load and display the 3D model for the selected suite.\n_c = RoomNav;\nconst SuiteModel = ({\n  modelPath\n}) => {\n  _s();\n  const {\n    scene\n  } = useGLTF(modelPath);\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: scene\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n\n// Control Panel for Zoom, Display Mode, and Person View toggle.\n_s(SuiteModel, \"o+hqw2nGnmzAsiWsKcbG4W2mWg4=\", false, function () {\n  return [useGLTF];\n});\n_c2 = SuiteModel;\nconst ControlPanel = ({\n  onZoomIn,\n  onZoomOut,\n  displayMode,\n  setDisplayMode,\n  controlMode,\n  toggleControlMode\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"control-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onZoomIn,\n      className: \"zoom-button\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/icons/zoom_in.svg\",\n        alt: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onZoomOut,\n      className: \"zoom-button\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/icons/zoom_out.svg\",\n        alt: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-toggle-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `display-tab ${displayMode === '3D' ? 'active' : ''}`,\n        onClick: () => setDisplayMode('3D'),\n        children: \"3D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `display-tab ${displayMode === '2D' ? 'active' : ''}`,\n        onClick: () => setDisplayMode('2D'),\n        children: \"2D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleControlMode,\n      className: `control-button ${controlMode === 'person' ? 'active' : ''}`,\n      children: \"Person View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c3 = ControlPanel;\nconst App = () => {\n  _s2();\n  // Room (suite) data.\n  const roomsData = [{\n    id: 1,\n    title: 'Suite 1',\n    modelPath: '/models/suite1.glb'\n  }, {\n    id: 2,\n    title: 'Suite 2',\n    modelPath: '/models/suite2.glb'\n  }, {\n    id: 3,\n    title: 'Suite 3',\n    modelPath: '/models/suite3.glb'\n  }];\n  const [selectedRoom, setSelectedRoom] = useState(roomsData[0]);\n  const [displayMode, setDisplayMode] = useState(\"3D\"); // \"3D\" uses Perspective, \"2D\" uses Orthographic.\n  const [controlMode, setControlMode] = useState(\"orbit\"); // \"orbit\" or \"person\"\n  const [zoomFactor, setZoomFactor] = useState(1);\n\n  // Refs for the camera and controls.\n  const cameraRef = useRef();\n  const controlsRef = useRef();\n\n  // When switching rooms or toggling control mode, reset zoom and update camera position.\n  useEffect(() => {\n    setZoomFactor(1);\n    if (controlsRef.current) {\n      // Reset OrbitControls target based on control mode.\n      if (controlMode === \"person\") {\n        controlsRef.current.target.set(0, 1.6, 0);\n      } else {\n        controlsRef.current.target.set(0, 0, 0);\n      }\n      controlsRef.current.reset();\n    }\n    if (cameraRef.current && displayMode === \"3D\") {\n      if (controlMode === \"person\") {\n        cameraRef.current.position.set(0, 1.6, 5);\n      } else {\n        cameraRef.current.position.set(0, 0, 5);\n      }\n    }\n  }, [selectedRoom, controlMode, displayMode]);\n\n  // Update camera position when zoom changes (only in 3D and orbit mode).\n  useEffect(() => {\n    if (cameraRef.current && displayMode === \"3D\") {\n      if (controlMode === \"orbit\") {\n        cameraRef.current.position.z = 5 * zoomFactor;\n      } else if (controlMode === \"person\") {\n        // In person view, maintain the eye-level height.\n        cameraRef.current.position.z = 5 * zoomFactor;\n        cameraRef.current.position.y = 1.6;\n      }\n    }\n  }, [zoomFactor, displayMode, controlMode]);\n  const zoomIn = () => setZoomFactor(prev => Math.max(prev * 0.9, 0.5));\n  const zoomOut = () => setZoomFactor(prev => prev / 0.9);\n  const toggleControlMode = () => {\n    // Toggle between orbit and person mode.\n    setControlMode(prev => prev === \"orbit\" ? \"person\" : \"orbit\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(RoomNav, {\n      rooms: roomsData,\n      selectedRoom: selectedRoom,\n      onSelectRoom: setSelectedRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"model-viewer\",\n      children: /*#__PURE__*/_jsxDEV(Canvas, {\n        children: [displayMode === \"3D\" ? /*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n          makeDefault: true,\n          ref: cameraRef,\n          position: controlMode === \"person\" ? [0, 1.6, 5 * zoomFactor] : [0, 0, 5 * zoomFactor],\n          fov: 75\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(OrthographicCamera, {\n          makeDefault: true,\n          ref: cameraRef,\n          position: [0, 50, 0],\n          zoom: 50 * zoomFactor,\n          near: 0.1,\n          far: 1000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n          intensity: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n          position: [10, 10, 10]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(Html, {\n            center: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading 3D Model...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 31\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(SuiteModel, {\n            modelPath: selectedRoom.modelPath\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n          ref: controlsRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      onZoomIn: zoomIn,\n      onZoomOut: zoomOut,\n      displayMode: displayMode,\n      setDisplayMode: setDisplayMode,\n      controlMode: controlMode,\n      toggleControlMode: toggleControlMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"zx8GNEy12ArNR+xwgFKkmTwdcF8=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"RoomNav\");\n$RefreshReg$(_c2, \"SuiteModel\");\n$RefreshReg$(_c3, \"ControlPanel\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","Suspense","useRef","useEffect","Canvas","OrbitControls","PerspectiveCamera","OrthographicCamera","useGLTF","Html","jsxDEV","_jsxDEV","RoomNav","rooms","selectedRoom","onSelectRoom","className","children","map","room","id","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","SuiteModel","modelPath","_s","scene","object","_c2","ControlPanel","onZoomIn","onZoomOut","displayMode","setDisplayMode","controlMode","toggleControlMode","src","alt","_c3","App","_s2","roomsData","setSelectedRoom","setControlMode","zoomFactor","setZoomFactor","cameraRef","controlsRef","current","target","set","reset","position","z","y","zoomIn","prev","Math","max","zoomOut","makeDefault","ref","fov","zoom","near","far","intensity","fallback","center","_c4","$RefreshReg$"],"sources":["C:/Users/elian/Downloads/3D Rooms/src/app.js"],"sourcesContent":["import React, { useState, Suspense, useRef, useEffect } from 'react';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport {\r\n  OrbitControls,\r\n  PerspectiveCamera,\r\n  OrthographicCamera,\r\n  useGLTF,\r\n  Html\r\n} from '@react-three/drei';\r\nimport './index.css';\r\n\r\n// Navigation Component (using your original button style)\r\nconst RoomNav = ({ rooms, selectedRoom, onSelectRoom }) => {\r\n  return (\r\n    <div className=\"room-nav-container\">\r\n      {rooms.map((room) => (\r\n        <button\r\n          key={room.id}\r\n          className={`room-nav-item ${selectedRoom.id === room.id ? 'active' : ''}`}\r\n          onClick={() => onSelectRoom(room)}\r\n        >\r\n          <div className=\"room-title\">{room.title}</div>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Component to load and display the 3D model for the selected suite.\r\nconst SuiteModel = ({ modelPath }) => {\r\n  const { scene } = useGLTF(modelPath);\r\n  return <primitive object={scene} />;\r\n};\r\n\r\n// Control Panel for Zoom, Display Mode, and Person View toggle.\r\nconst ControlPanel = ({\r\n  onZoomIn,\r\n  onZoomOut,\r\n  displayMode,\r\n  setDisplayMode,\r\n  controlMode,\r\n  toggleControlMode\r\n}) => {\r\n  return (\r\n    <div className=\"control-panel\">\r\n      <button onClick={onZoomIn} className=\"zoom-button\">\r\n        <img src=\"/icons/zoom_in.svg\" alt=\"Zoom In\" />\r\n      </button>\r\n      <button onClick={onZoomOut} className=\"zoom-button\">\r\n        <img src=\"/icons/zoom_out.svg\" alt=\"Zoom Out\" />\r\n      </button>\r\n      <div className=\"display-toggle-tabs\">\r\n        <button\r\n          className={`display-tab ${displayMode === '3D' ? 'active' : ''}`}\r\n          onClick={() => setDisplayMode('3D')}\r\n        >\r\n          3D\r\n        </button>\r\n        <button\r\n          className={`display-tab ${displayMode === '2D' ? 'active' : ''}`}\r\n          onClick={() => setDisplayMode('2D')}\r\n        >\r\n          2D\r\n        </button>\r\n      </div>\r\n      <button\r\n        onClick={toggleControlMode}\r\n        className={`control-button ${controlMode === 'person' ? 'active' : ''}`}\r\n      >\r\n        Person View\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  // Room (suite) data.\r\n  const roomsData = [\r\n    { id: 1, title: 'Suite 1', modelPath: '/models/suite1.glb' },\r\n    { id: 2, title: 'Suite 2', modelPath: '/models/suite2.glb' },\r\n    { id: 3, title: 'Suite 3', modelPath: '/models/suite3.glb' },\r\n  ];\r\n\r\n  const [selectedRoom, setSelectedRoom] = useState(roomsData[0]);\r\n  const [displayMode, setDisplayMode] = useState(\"3D\"); // \"3D\" uses Perspective, \"2D\" uses Orthographic.\r\n  const [controlMode, setControlMode] = useState(\"orbit\"); // \"orbit\" or \"person\"\r\n  const [zoomFactor, setZoomFactor] = useState(1);\r\n\r\n  // Refs for the camera and controls.\r\n  const cameraRef = useRef();\r\n  const controlsRef = useRef();\r\n\r\n  // When switching rooms or toggling control mode, reset zoom and update camera position.\r\n  useEffect(() => {\r\n    setZoomFactor(1);\r\n    if (controlsRef.current) {\r\n      // Reset OrbitControls target based on control mode.\r\n      if (controlMode === \"person\") {\r\n        controlsRef.current.target.set(0, 1.6, 0);\r\n      } else {\r\n        controlsRef.current.target.set(0, 0, 0);\r\n      }\r\n      controlsRef.current.reset();\r\n    }\r\n    if (cameraRef.current && displayMode === \"3D\") {\r\n      if (controlMode === \"person\") {\r\n        cameraRef.current.position.set(0, 1.6, 5);\r\n      } else {\r\n        cameraRef.current.position.set(0, 0, 5);\r\n      }\r\n    }\r\n  }, [selectedRoom, controlMode, displayMode]);\r\n\r\n  // Update camera position when zoom changes (only in 3D and orbit mode).\r\n  useEffect(() => {\r\n    if (cameraRef.current && displayMode === \"3D\") {\r\n      if (controlMode === \"orbit\") {\r\n        cameraRef.current.position.z = 5 * zoomFactor;\r\n      } else if (controlMode === \"person\") {\r\n        // In person view, maintain the eye-level height.\r\n        cameraRef.current.position.z = 5 * zoomFactor;\r\n        cameraRef.current.position.y = 1.6;\r\n      }\r\n    }\r\n  }, [zoomFactor, displayMode, controlMode]);\r\n\r\n  const zoomIn = () => setZoomFactor((prev) => Math.max(prev * 0.9, 0.5));\r\n  const zoomOut = () => setZoomFactor((prev) => prev / 0.9);\r\n  const toggleControlMode = () => {\r\n    // Toggle between orbit and person mode.\r\n    setControlMode((prev) => (prev === \"orbit\" ? \"person\" : \"orbit\"));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* Room Navigation */}\r\n      <RoomNav rooms={roomsData} selectedRoom={selectedRoom} onSelectRoom={setSelectedRoom} />\r\n\r\n      {/* 3D Model Viewer Container */}\r\n      <div className=\"model-viewer\">\r\n        <Canvas>\r\n          {displayMode === \"3D\" ? (\r\n            <PerspectiveCamera\r\n              makeDefault\r\n              ref={cameraRef}\r\n              position={\r\n                controlMode === \"person\"\r\n                  ? [0, 1.6, 5 * zoomFactor]\r\n                  : [0, 0, 5 * zoomFactor]\r\n              }\r\n              fov={75}\r\n            />\r\n          ) : (\r\n            <OrthographicCamera\r\n              makeDefault\r\n              ref={cameraRef}\r\n              position={[0, 50, 0]}\r\n              zoom={50 * zoomFactor}\r\n              near={0.1}\r\n              far={1000}\r\n            />\r\n          )}\r\n          <ambientLight intensity={0.5} />\r\n          <pointLight position={[10, 10, 10]} />\r\n          <Suspense fallback={<Html center><div>Loading 3D Model...</div></Html>}>\r\n            <SuiteModel modelPath={selectedRoom.modelPath} />\r\n          </Suspense>\r\n          <OrbitControls ref={controlsRef} />\r\n        </Canvas>\r\n      </div>\r\n\r\n      {/* Control Panel for Zoom, Display Mode, and Person View Toggle */}\r\n      <ControlPanel\r\n        onZoomIn={zoomIn}\r\n        onZoomOut={zoomOut}\r\n        displayMode={displayMode}\r\n        setDisplayMode={setDisplayMode}\r\n        controlMode={controlMode}\r\n        toggleControlMode={toggleControlMode}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACpE,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SACEC,aAAa,EACbC,iBAAiB,EACjBC,kBAAkB,EAClBC,OAAO,EACPC,IAAI,QACC,mBAAmB;AAC1B,OAAO,aAAa;;AAEpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAGA,CAAC;EAAEC,KAAK;EAAEC,YAAY;EAAEC;AAAa,CAAC,KAAK;EACzD,oBACEJ,OAAA;IAAKK,SAAS,EAAC,oBAAoB;IAAAC,QAAA,EAChCJ,KAAK,CAACK,GAAG,CAAEC,IAAI,iBACdR,OAAA;MAEEK,SAAS,EAAE,iBAAiBF,YAAY,CAACM,EAAE,KAAKD,IAAI,CAACC,EAAE,GAAG,QAAQ,GAAG,EAAE,EAAG;MAC1EC,OAAO,EAAEA,CAAA,KAAMN,YAAY,CAACI,IAAI,CAAE;MAAAF,QAAA,eAElCN,OAAA;QAAKK,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAEE,IAAI,CAACG;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC,GAJzCP,IAAI,CAACC,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKN,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;;AAED;AAAAC,EAAA,GAhBMf,OAAO;AAiBb,MAAMgB,UAAU,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM;IAAEC;EAAM,CAAC,GAAGvB,OAAO,CAACqB,SAAS,CAAC;EACpC,oBAAOlB,OAAA;IAAWqB,MAAM,EAAED;EAAM;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrC,CAAC;;AAED;AAAAI,EAAA,CALMF,UAAU;EAAA,QACIpB,OAAO;AAAA;AAAAyB,GAAA,GADrBL,UAAU;AAMhB,MAAMM,YAAY,GAAGA,CAAC;EACpBC,QAAQ;EACRC,SAAS;EACTC,WAAW;EACXC,cAAc;EACdC,WAAW;EACXC;AACF,CAAC,KAAK;EACJ,oBACE7B,OAAA;IAAKK,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BN,OAAA;MAAQU,OAAO,EAAEc,QAAS;MAACnB,SAAS,EAAC,aAAa;MAAAC,QAAA,eAChDN,OAAA;QAAK8B,GAAG,EAAC,oBAAoB;QAACC,GAAG,EAAC;MAAS;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACTf,OAAA;MAAQU,OAAO,EAAEe,SAAU;MAACpB,SAAS,EAAC,aAAa;MAAAC,QAAA,eACjDN,OAAA;QAAK8B,GAAG,EAAC,qBAAqB;QAACC,GAAG,EAAC;MAAU;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACTf,OAAA;MAAKK,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClCN,OAAA;QACEK,SAAS,EAAE,eAAeqB,WAAW,KAAK,IAAI,GAAG,QAAQ,GAAG,EAAE,EAAG;QACjEhB,OAAO,EAAEA,CAAA,KAAMiB,cAAc,CAAC,IAAI,CAAE;QAAArB,QAAA,EACrC;MAED;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTf,OAAA;QACEK,SAAS,EAAE,eAAeqB,WAAW,KAAK,IAAI,GAAG,QAAQ,GAAG,EAAE,EAAG;QACjEhB,OAAO,EAAEA,CAAA,KAAMiB,cAAc,CAAC,IAAI,CAAE;QAAArB,QAAA,EACrC;MAED;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNf,OAAA;MACEU,OAAO,EAAEmB,iBAAkB;MAC3BxB,SAAS,EAAE,kBAAkBuB,WAAW,KAAK,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;MAAAtB,QAAA,EACzE;IAED;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACiB,GAAA,GAtCIT,YAAY;AAwClB,MAAMU,GAAG,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAChB;EACA,MAAMC,SAAS,GAAG,CAChB;IAAE1B,EAAE,EAAE,CAAC;IAAEE,KAAK,EAAE,SAAS;IAAEO,SAAS,EAAE;EAAqB,CAAC,EAC5D;IAAET,EAAE,EAAE,CAAC;IAAEE,KAAK,EAAE,SAAS;IAAEO,SAAS,EAAE;EAAqB,CAAC,EAC5D;IAAET,EAAE,EAAE,CAAC;IAAEE,KAAK,EAAE,SAAS;IAAEO,SAAS,EAAE;EAAqB,CAAC,CAC7D;EAED,MAAM,CAACf,YAAY,EAAEiC,eAAe,CAAC,GAAG/C,QAAQ,CAAC8C,SAAS,CAAC,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACT,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACuC,WAAW,EAAES,cAAc,CAAC,GAAGhD,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACzD,MAAM,CAACiD,UAAU,EAAEC,aAAa,CAAC,GAAGlD,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMmD,SAAS,GAAGjD,MAAM,CAAC,CAAC;EAC1B,MAAMkD,WAAW,GAAGlD,MAAM,CAAC,CAAC;;EAE5B;EACAC,SAAS,CAAC,MAAM;IACd+C,aAAa,CAAC,CAAC,CAAC;IAChB,IAAIE,WAAW,CAACC,OAAO,EAAE;MACvB;MACA,IAAId,WAAW,KAAK,QAAQ,EAAE;QAC5Ba,WAAW,CAACC,OAAO,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;MAC3C,CAAC,MAAM;QACLH,WAAW,CAACC,OAAO,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACzC;MACAH,WAAW,CAACC,OAAO,CAACG,KAAK,CAAC,CAAC;IAC7B;IACA,IAAIL,SAAS,CAACE,OAAO,IAAIhB,WAAW,KAAK,IAAI,EAAE;MAC7C,IAAIE,WAAW,KAAK,QAAQ,EAAE;QAC5BY,SAAS,CAACE,OAAO,CAACI,QAAQ,CAACF,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;MAC3C,CAAC,MAAM;QACLJ,SAAS,CAACE,OAAO,CAACI,QAAQ,CAACF,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACzC;IACF;EACF,CAAC,EAAE,CAACzC,YAAY,EAAEyB,WAAW,EAAEF,WAAW,CAAC,CAAC;;EAE5C;EACAlC,SAAS,CAAC,MAAM;IACd,IAAIgD,SAAS,CAACE,OAAO,IAAIhB,WAAW,KAAK,IAAI,EAAE;MAC7C,IAAIE,WAAW,KAAK,OAAO,EAAE;QAC3BY,SAAS,CAACE,OAAO,CAACI,QAAQ,CAACC,CAAC,GAAG,CAAC,GAAGT,UAAU;MAC/C,CAAC,MAAM,IAAIV,WAAW,KAAK,QAAQ,EAAE;QACnC;QACAY,SAAS,CAACE,OAAO,CAACI,QAAQ,CAACC,CAAC,GAAG,CAAC,GAAGT,UAAU;QAC7CE,SAAS,CAACE,OAAO,CAACI,QAAQ,CAACE,CAAC,GAAG,GAAG;MACpC;IACF;EACF,CAAC,EAAE,CAACV,UAAU,EAAEZ,WAAW,EAAEE,WAAW,CAAC,CAAC;EAE1C,MAAMqB,MAAM,GAAGA,CAAA,KAAMV,aAAa,CAAEW,IAAI,IAAKC,IAAI,CAACC,GAAG,CAACF,IAAI,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;EACvE,MAAMG,OAAO,GAAGA,CAAA,KAAMd,aAAa,CAAEW,IAAI,IAAKA,IAAI,GAAG,GAAG,CAAC;EACzD,MAAMrB,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACAQ,cAAc,CAAEa,IAAI,IAAMA,IAAI,KAAK,OAAO,GAAG,QAAQ,GAAG,OAAQ,CAAC;EACnE,CAAC;EAED,oBACElD,OAAA;IAAKK,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAElBN,OAAA,CAACC,OAAO;MAACC,KAAK,EAAEiC,SAAU;MAAChC,YAAY,EAAEA,YAAa;MAACC,YAAY,EAAEgC;IAAgB;MAAAxB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGxFf,OAAA;MAAKK,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BN,OAAA,CAACP,MAAM;QAAAa,QAAA,GACJoB,WAAW,KAAK,IAAI,gBACnB1B,OAAA,CAACL,iBAAiB;UAChB2D,WAAW;UACXC,GAAG,EAAEf,SAAU;UACfM,QAAQ,EACNlB,WAAW,KAAK,QAAQ,GACpB,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAGU,UAAU,CAAC,GACxB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGA,UAAU,CAC1B;UACDkB,GAAG,EAAE;QAAG;UAAA5C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,gBAEFf,OAAA,CAACJ,kBAAkB;UACjB0D,WAAW;UACXC,GAAG,EAAEf,SAAU;UACfM,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAE;UACrBW,IAAI,EAAE,EAAE,GAAGnB,UAAW;UACtBoB,IAAI,EAAE,GAAI;UACVC,GAAG,EAAE;QAAK;UAAA/C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CACF,eACDf,OAAA;UAAc4D,SAAS,EAAE;QAAI;UAAAhD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChCf,OAAA;UAAY8C,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;QAAE;UAAAlC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtCf,OAAA,CAACV,QAAQ;UAACuE,QAAQ,eAAE7D,OAAA,CAACF,IAAI;YAACgE,MAAM;YAAAxD,QAAA,eAACN,OAAA;cAAAM,QAAA,EAAK;YAAmB;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAE;UAAAT,QAAA,eACrEN,OAAA,CAACiB,UAAU;YAACC,SAAS,EAAEf,YAAY,CAACe;UAAU;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,eACXf,OAAA,CAACN,aAAa;UAAC6D,GAAG,EAAEd;QAAY;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNf,OAAA,CAACuB,YAAY;MACXC,QAAQ,EAAEyB,MAAO;MACjBxB,SAAS,EAAE4B,OAAQ;MACnB3B,WAAW,EAAEA,WAAY;MACzBC,cAAc,EAAEA,cAAe;MAC/BC,WAAW,EAAEA,WAAY;MACzBC,iBAAiB,EAAEA;IAAkB;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACmB,GAAA,CA3GID,GAAG;AAAA8B,GAAA,GAAH9B,GAAG;AA6GT,eAAeA,GAAG;AAAC,IAAAjB,EAAA,EAAAM,GAAA,EAAAU,GAAA,EAAA+B,GAAA;AAAAC,YAAA,CAAAhD,EAAA;AAAAgD,YAAA,CAAA1C,GAAA;AAAA0C,YAAA,CAAAhC,GAAA;AAAAgC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}