{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elian\\\\Downloads\\\\3D Rooms\\\\src\\\\app.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, Suspense, useRef, useEffect } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { OrbitControls, PerspectiveCamera, OrthographicCamera, useGLTF, Html } from '@react-three/drei';\nimport './index.css';\n\n// Preload all suite models so that switching back loads from cache.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nuseGLTF.preload('/models/suite1.glb');\nuseGLTF.preload('/models/suite2.glb');\nuseGLTF.preload('/models/suite3.glb');\n\n// Navigation Component (RoomNav) using your original button style.\nconst RoomNav = ({\n  rooms,\n  selectedRoom,\n  onSelectRoom\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-nav-container\",\n    children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `room-nav-item ${selectedRoom.id === room.id ? 'active' : ''}`,\n      onClick: () => onSelectRoom(room),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: room.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, room.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n// Component to load and display the 3D model for the selected suite.\n// It also hides a mesh named \"Wall\" if the camera is facing it.\n_c = RoomNav;\nconst SuiteModel = ({\n  modelPath\n}) => {\n  _s();\n  const {\n    scene\n  } = useGLTF(modelPath);\n  useFrame(state => {\n    // Get the camera from the frame state\n    const {\n      camera\n    } = state;\n    // Attempt to get the wall mesh by name\n    const wall = scene.getObjectByName(\"Wall\");\n    if (wall) {\n      // Get the camera's forward direction (a unit vector)\n      const camDir = new THREE.Vector3();\n      camera.getWorldDirection(camDir);\n\n      // Define the wall's assumed outward normal.\n      // (Change this if your wall's normal is different.)\n      const wallNormal = new THREE.Vector3(0, 0, 1);\n\n      // Compute the dot product between camera direction and wall normal.\n      const dot = camDir.dot(wallNormal);\n\n      // If dot is high (close to 1), then the camera is nearly facing the wall.\n      // Adjust threshold as needed.\n      const threshold = 0.8;\n\n      // If camera is facing the wall, hide it; otherwise, show it.\n      wall.visible = dot < threshold;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: scene\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n};\n\n// Control Panel for zoom controls and display mode tabs.\n_s(SuiteModel, \"HINXHp/fUJ2rBXVDXN+nYbrSXRo=\", false, function () {\n  return [useGLTF, useFrame];\n});\n_c2 = SuiteModel;\nconst ControlPanel = ({\n  onZoomIn,\n  onZoomOut,\n  displayMode,\n  setDisplayMode\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"control-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onZoomIn,\n      className: \"zoom-button\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/icons/zoom_in.svg\",\n        alt: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onZoomOut,\n      className: \"zoom-button\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/icons/zoom_out.svg\",\n        alt: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-toggle-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `display-tab ${displayMode === '3D' ? 'active' : ''}`,\n        onClick: () => setDisplayMode('3D'),\n        children: \"3D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `display-tab ${displayMode === '2D' ? 'active' : ''}`,\n        onClick: () => setDisplayMode('2D'),\n        children: \"2D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_c3 = ControlPanel;\nconst App = () => {\n  _s2();\n  // Room (suite) data.\n  const roomsData = [{\n    id: 1,\n    title: 'Suite 1',\n    modelPath: '/models/suite1.glb'\n  }, {\n    id: 2,\n    title: 'Suite 2',\n    modelPath: '/models/suite2.glb'\n  }, {\n    id: 3,\n    title: 'Suite 3',\n    modelPath: '/models/suite3.glb'\n  }];\n  const [selectedRoom, setSelectedRoom] = useState(roomsData[0]);\n  const [displayMode, setDisplayMode] = useState('3D'); // \"3D\" for perspective, \"2D\" for orthographic.\n  const [zoomFactor, setZoomFactor] = useState(1);\n\n  // Refs for the camera and OrbitControls.\n  const cameraRef = useRef();\n  const controlsRef = useRef();\n\n  // When switching rooms or display mode, reset zoom and controls.\n  useEffect(() => {\n    setZoomFactor(1);\n    if (controlsRef.current) {\n      controlsRef.current.reset();\n    }\n    if (cameraRef.current && displayMode === '3D') {\n      cameraRef.current.position.set(0, 0, 5);\n    }\n  }, [selectedRoom, displayMode]);\n\n  // Update the camera when zoom changes (for 3D mode).\n  useEffect(() => {\n    if (cameraRef.current && displayMode === '3D') {\n      cameraRef.current.position.z = 5 * zoomFactor;\n    }\n  }, [zoomFactor, displayMode]);\n  const zoomIn = () => setZoomFactor(prev => Math.max(prev * 0.9, 0.5));\n  const zoomOut = () => setZoomFactor(prev => prev / 0.9);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(RoomNav, {\n      rooms: roomsData,\n      selectedRoom: selectedRoom,\n      onSelectRoom: setSelectedRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"model-viewer\",\n      children: /*#__PURE__*/_jsxDEV(Canvas, {\n        children: [displayMode === '3D' ? /*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n          makeDefault: true,\n          ref: cameraRef,\n          position: [0, 0, 5 * zoomFactor],\n          fov: 75\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(OrthographicCamera, {\n          makeDefault: true,\n          ref: cameraRef,\n          position: [0, 50, 0],\n          zoom: 50 * zoomFactor,\n          near: 0.1,\n          far: 1000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n          intensity: 1.2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n          position: [10, 10, 10]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(Html, {\n            center: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading 3D Model...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 31\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(SuiteModel, {\n            modelPath: selectedRoom.modelPath\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n          ref: controlsRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      onZoomIn: zoomIn,\n      onZoomOut: zoomOut,\n      displayMode: displayMode,\n      setDisplayMode: setDisplayMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"Hoh1otVdqIh44GtKiXn4fkrcUeg=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"RoomNav\");\n$RefreshReg$(_c2, \"SuiteModel\");\n$RefreshReg$(_c3, \"ControlPanel\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","Suspense","useRef","useEffect","Canvas","useFrame","OrbitControls","PerspectiveCamera","OrthographicCamera","useGLTF","Html","jsxDEV","_jsxDEV","preload","RoomNav","rooms","selectedRoom","onSelectRoom","className","children","map","room","id","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","SuiteModel","modelPath","_s","scene","state","camera","wall","getObjectByName","camDir","THREE","Vector3","getWorldDirection","wallNormal","dot","threshold","visible","object","_c2","ControlPanel","onZoomIn","onZoomOut","displayMode","setDisplayMode","src","alt","_c3","App","_s2","roomsData","setSelectedRoom","zoomFactor","setZoomFactor","cameraRef","controlsRef","current","reset","position","set","z","zoomIn","prev","Math","max","zoomOut","makeDefault","ref","fov","zoom","near","far","intensity","fallback","center","_c4","$RefreshReg$"],"sources":["C:/Users/elian/Downloads/3D Rooms/src/app.js"],"sourcesContent":["import React, { useState, Suspense, useRef, useEffect } from 'react';\r\nimport { Canvas,useFrame } from '@react-three/fiber';\r\nimport { OrbitControls, PerspectiveCamera, OrthographicCamera, useGLTF, Html} from '@react-three/drei';\r\nimport './index.css';\r\n\r\n// Preload all suite models so that switching back loads from cache.\r\nuseGLTF.preload('/models/suite1.glb');\r\nuseGLTF.preload('/models/suite2.glb');\r\nuseGLTF.preload('/models/suite3.glb');\r\n\r\n// Navigation Component (RoomNav) using your original button style.\r\nconst RoomNav = ({ rooms, selectedRoom, onSelectRoom }) => {\r\n  return (\r\n    <div className=\"room-nav-container\">\r\n      {rooms.map((room) => (\r\n        <button\r\n          key={room.id}\r\n          className={`room-nav-item ${selectedRoom.id === room.id ? 'active' : ''}`}\r\n          onClick={() => onSelectRoom(room)}\r\n        >\r\n          <div className=\"room-title\">{room.title}</div>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n// Component to load and display the 3D model for the selected suite.\r\n// It also hides a mesh named \"Wall\" if the camera is facing it.\r\nconst SuiteModel = ({ modelPath }) => {\r\n  const { scene } = useGLTF(modelPath);\r\n\r\n  useFrame((state) => {\r\n    // Get the camera from the frame state\r\n    const { camera } = state;\r\n    // Attempt to get the wall mesh by name\r\n    const wall = scene.getObjectByName(\"Wall\");\r\n    if (wall) {\r\n      // Get the camera's forward direction (a unit vector)\r\n      const camDir = new THREE.Vector3();\r\n      camera.getWorldDirection(camDir);\r\n\r\n      // Define the wall's assumed outward normal.\r\n      // (Change this if your wall's normal is different.)\r\n      const wallNormal = new THREE.Vector3(0, 0, 1);\r\n\r\n      // Compute the dot product between camera direction and wall normal.\r\n      const dot = camDir.dot(wallNormal);\r\n\r\n      // If dot is high (close to 1), then the camera is nearly facing the wall.\r\n      // Adjust threshold as needed.\r\n      const threshold = 0.8;\r\n\r\n      // If camera is facing the wall, hide it; otherwise, show it.\r\n      wall.visible = dot < threshold;\r\n    }\r\n  });\r\n\r\n  return <primitive object={scene} />;\r\n};\r\n\r\n// Control Panel for zoom controls and display mode tabs.\r\nconst ControlPanel = ({ onZoomIn, onZoomOut, displayMode, setDisplayMode }) => {\r\n  return (\r\n    <div className=\"control-panel\">\r\n      <button onClick={onZoomIn} className=\"zoom-button\">\r\n        <img src=\"/icons/zoom_in.svg\" alt=\"Zoom In\" />\r\n      </button>\r\n      <button onClick={onZoomOut} className=\"zoom-button\">\r\n        <img src=\"/icons/zoom_out.svg\" alt=\"Zoom Out\" />\r\n      </button>\r\n      <div className=\"display-toggle-tabs\">\r\n        <button\r\n          className={`display-tab ${displayMode === '3D' ? 'active' : ''}`}\r\n          onClick={() => setDisplayMode('3D')}\r\n        >\r\n          3D\r\n        </button>\r\n        <button\r\n          className={`display-tab ${displayMode === '2D' ? 'active' : ''}`}\r\n          onClick={() => setDisplayMode('2D')}\r\n        >\r\n          2D\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  // Room (suite) data.\r\n  const roomsData = [\r\n    { id: 1, title: 'Suite 1', modelPath: '/models/suite1.glb' },\r\n    { id: 2, title: 'Suite 2', modelPath: '/models/suite2.glb' },\r\n    { id: 3, title: 'Suite 3', modelPath: '/models/suite3.glb' },\r\n  ];\r\n\r\n  const [selectedRoom, setSelectedRoom] = useState(roomsData[0]);\r\n  const [displayMode, setDisplayMode] = useState('3D'); // \"3D\" for perspective, \"2D\" for orthographic.\r\n  const [zoomFactor, setZoomFactor] = useState(1);\r\n\r\n  // Refs for the camera and OrbitControls.\r\n  const cameraRef = useRef();\r\n  const controlsRef = useRef();\r\n\r\n  // When switching rooms or display mode, reset zoom and controls.\r\n  useEffect(() => {\r\n    setZoomFactor(1);\r\n    if (controlsRef.current) {\r\n      controlsRef.current.reset();\r\n    }\r\n    if (cameraRef.current && displayMode === '3D') {\r\n      cameraRef.current.position.set(0, 0, 5);\r\n    }\r\n  }, [selectedRoom, displayMode]);\r\n\r\n  // Update the camera when zoom changes (for 3D mode).\r\n  useEffect(() => {\r\n    if (cameraRef.current && displayMode === '3D') {\r\n      cameraRef.current.position.z = 5 * zoomFactor;\r\n    }\r\n  }, [zoomFactor, displayMode]);\r\n\r\n  const zoomIn = () => setZoomFactor((prev) => Math.max(prev * 0.9, 0.5));\r\n  const zoomOut = () => setZoomFactor((prev) => prev / 0.9);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* Room Navigation */}\r\n      <RoomNav rooms={roomsData} selectedRoom={selectedRoom} onSelectRoom={setSelectedRoom} />\r\n\r\n      {/* 3D Model Viewer */}\r\n      <div className=\"model-viewer\">\r\n        <Canvas>\r\n          {displayMode === '3D' ? (\r\n            <PerspectiveCamera\r\n              makeDefault\r\n              ref={cameraRef}\r\n              position={[0, 0, 5 * zoomFactor]}\r\n              fov={75}\r\n            />\r\n          ) : (\r\n            <OrthographicCamera\r\n              makeDefault\r\n              ref={cameraRef}\r\n              position={[0, 50, 0]}\r\n              zoom={50 * zoomFactor}\r\n              near={0.1}\r\n              far={1000}\r\n            />\r\n          )}\r\n          <ambientLight intensity={1.2} />\r\n          <pointLight position={[10, 10, 10]} />\r\n          <Suspense fallback={<Html center><div>Loading 3D Model...</div></Html>}>\r\n            <SuiteModel modelPath={selectedRoom.modelPath} />\r\n          </Suspense>\r\n          <OrbitControls ref={controlsRef} />\r\n        </Canvas>\r\n      </div>\r\n\r\n      {/* Control Panel for Zoom & Display Mode Tabs */}\r\n      <ControlPanel\r\n        onZoomIn={zoomIn}\r\n        onZoomOut={zoomOut}\r\n        displayMode={displayMode}\r\n        setDisplayMode={setDisplayMode}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}