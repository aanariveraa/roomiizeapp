{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elian\\\\Downloads\\\\3D Rooms\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport RoomNav from './RoomNav';\nimport './index.css'; // Optional: for additional overall styling\n\n// Sample room data; adjust the image paths and titles as needed.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst roomsData = [{\n  id: 1,\n  title: 'Suite 1',\n  image: '/models/suite1.jpg'\n}, {\n  id: 2,\n  title: 'Suite 2',\n  image: '/models/suite2.jpg'\n}, {\n  id: 3,\n  title: 'Suite 3',\n  image: '/models/suite3.jpg'\n}];\nconst App = () => {\n  _s();\n  const [selectedRoom, setSelectedRoom] = useState(roomsData[0].id);\n  const handleSelectRoom = roomId => {\n    setSelectedRoom(roomId);\n    // Insert additional logic to update your 3D model view, room details, etc.\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(RoomNav, {\n      rooms: roomsData,\n      selectedRoom: selectedRoom,\n      onSelectRoom: handleSelectRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-content\",\n      children: [selectedRoom === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Display Suite 1 details/model here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 32\n      }, this), selectedRoom === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Display Suite 2 details/model here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 32\n      }, this), selectedRoom === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Display Suite 3 details/model here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"f2vDuCrrTYfT5hnduXETzXauwI0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","RoomNav","jsxDEV","_jsxDEV","roomsData","id","title","image","App","_s","selectedRoom","setSelectedRoom","handleSelectRoom","roomId","className","children","rooms","onSelectRoom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/elian/Downloads/3D Rooms/src/app.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport RoomNav from './RoomNav';\r\nimport './index.css'; // Optional: for additional overall styling\r\n\r\n// Sample room data; adjust the image paths and titles as needed.\r\nconst roomsData = [\r\n  { id: 1, title: 'Suite 1', image: '/models/suite1.jpg' },\r\n  { id: 2, title: 'Suite 2', image: '/models/suite2.jpg' },\r\n  { id: 3, title: 'Suite 3', image: '/models/suite3.jpg' }\r\n];\r\n\r\nconst App = () => {\r\n  const [selectedRoom, setSelectedRoom] = useState(roomsData[0].id);\r\n\r\n  const handleSelectRoom = (roomId) => {\r\n    setSelectedRoom(roomId);\r\n    // Insert additional logic to update your 3D model view, room details, etc.\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <RoomNav\r\n        rooms={roomsData}\r\n        selectedRoom={selectedRoom}\r\n        onSelectRoom={handleSelectRoom}\r\n      />\r\n\r\n      <div className=\"room-content\">\r\n        {/* This is where you'd display room details or the corresponding 3D model */}\r\n        {selectedRoom === 1 && <div>Display Suite 1 details/model here</div>}\r\n        {selectedRoom === 2 && <div>Display Suite 2 details/model here</div>}\r\n        {selectedRoom === 3 && <div>Display Suite 3 details/model here</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,aAAa,CAAC,CAAC;;AAEtB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAG,CAChB;EAAEC,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAqB,CAAC,EACxD;EAAEF,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAqB,CAAC,EACxD;EAAEF,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAqB,CAAC,CACzD;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAACI,SAAS,CAAC,CAAC,CAAC,CAACC,EAAE,CAAC;EAEjE,MAAMO,gBAAgB,GAAIC,MAAM,IAAK;IACnCF,eAAe,CAACE,MAAM,CAAC;IACvB;EACF,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBZ,OAAA,CAACF,OAAO;MACNe,KAAK,EAAEZ,SAAU;MACjBM,YAAY,EAAEA,YAAa;MAC3BO,YAAY,EAAEL;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eAEFlB,OAAA;MAAKW,SAAS,EAAC,cAAc;MAAAC,QAAA,GAE1BL,YAAY,KAAK,CAAC,iBAAIP,OAAA;QAAAY,QAAA,EAAK;MAAkC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACnEX,YAAY,KAAK,CAAC,iBAAIP,OAAA;QAAAY,QAAA,EAAK;MAAkC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACnEX,YAAY,KAAK,CAAC,iBAAIP,OAAA;QAAAY,QAAA,EAAK;MAAkC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CAxBID,GAAG;AAAAc,EAAA,GAAHd,GAAG;AA0BT,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}