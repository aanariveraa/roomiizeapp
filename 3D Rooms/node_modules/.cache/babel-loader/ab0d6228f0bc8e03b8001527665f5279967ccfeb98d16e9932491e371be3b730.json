{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elian\\\\Downloads\\\\3D Rooms\\\\src\\\\app.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, Suspense, useRef, useEffect } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, PerspectiveCamera, OrthographicCamera, useGLTF, Html } from '@react-three/drei';\nimport './index.css';\n\n// Room Navigation Component (using your original button style)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomNav = ({\n  rooms,\n  selectedRoom,\n  onSelectRoom\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-nav-container\",\n    children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `room-nav-item ${selectedRoom.id === room.id ? 'active' : ''}`,\n      onClick: () => onSelectRoom(room),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: room.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, room.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n// Component to load and display the 3D model for the selected suite.\n_c = RoomNav;\nconst SuiteModel = ({\n  modelPath\n}) => {\n  _s();\n  const {\n    scene\n  } = useGLTF(modelPath);\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: scene\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n\n// Control Panel for zoom, display mode, and Person View toggle/dropâ€‘down.\n_s(SuiteModel, \"o+hqw2nGnmzAsiWsKcbG4W2mWg4=\", false, function () {\n  return [useGLTF];\n});\n_c2 = SuiteModel;\nconst ControlPanel = ({\n  onZoomIn,\n  onZoomOut,\n  displayMode,\n  setDisplayMode,\n  controlMode,\n  toggleControlMode,\n  personViewPreset,\n  setPersonViewPreset,\n  personViewOptions\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"control-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onZoomIn,\n      className: \"zoom-button\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/icons/zoom_in.svg\",\n        alt: \"Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onZoomOut,\n      className: \"zoom-button\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/icons/zoom_out.svg\",\n        alt: \"Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-toggle-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `display-tab ${displayMode === '3D' ? 'active' : ''}`,\n        onClick: () => setDisplayMode('3D'),\n        children: \"3D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `display-tab ${displayMode === '2D' ? 'active' : ''}`,\n        onClick: () => setDisplayMode('2D'),\n        children: \"2D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleControlMode,\n      className: `control-button ${controlMode === 'person' ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/icons/person_view.svg\",\n        alt: \"Person View\",\n        className: \"person-view-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), \"Person View\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), controlMode === 'person' && /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"person-view-dropdown\",\n      value: personViewPreset,\n      onChange: e => setPersonViewPreset(e.target.value),\n      children: personViewOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.label,\n        children: option.label\n      }, option.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c3 = ControlPanel;\nconst App = () => {\n  _s2();\n  var _personViewOptions$fi;\n  // Room (suite) data.\n  const roomsData = [{\n    id: 1,\n    title: 'Suite 1',\n    modelPath: '/models/suite1.glb'\n  }, {\n    id: 2,\n    title: 'Suite 2',\n    modelPath: '/models/suite2.glb'\n  }, {\n    id: 3,\n    title: 'Suite 3',\n    modelPath: '/models/suite3.glb'\n  }];\n\n  // Person View presets (each with a label and a camera position).\n  const personViewOptions = [{\n    label: \"Standard\",\n    position: [0, 1.6, 5]\n  }, {\n    label: \"Corner\",\n    position: [2, 1.6, 5]\n  }, {\n    label: \"Back\",\n    position: [0, 1.6, -5]\n  }];\n\n  // State for selected room, display mode, control mode, zoom factor, and person view preset.\n  const [selectedRoom, setSelectedRoom] = useState(roomsData[0]);\n  const [displayMode, setDisplayMode] = useState(\"3D\"); // \"3D\" uses Perspective, \"2D\" uses Orthographic.\n  const [controlMode, setControlMode] = useState(\"orbit\"); // \"orbit\" or \"person\"\n  const [zoomFactor, setZoomFactor] = useState(1);\n  const [personViewPreset, setPersonViewPreset] = useState(\"Standard\");\n\n  // Refs for the camera and OrbitControls.\n  const cameraRef = useRef();\n  const controlsRef = useRef();\n\n  // When switching rooms, control mode, or person view preset, reset zoom and update camera position.\n  useEffect(() => {\n    setZoomFactor(1);\n    if (controlsRef.current) {\n      if (controlMode === \"person\") {\n        // In person view, we aim for eye-level.\n        controlsRef.current.target.set(0, 1.6, 0);\n      } else {\n        controlsRef.current.target.set(0, 0, 0);\n      }\n      controlsRef.current.reset();\n    }\n    if (cameraRef.current && displayMode === \"3D\") {\n      if (controlMode === \"person\") {\n        const preset = personViewOptions.find(opt => opt.label === personViewPreset);\n        if (preset) {\n          cameraRef.current.position.set(...preset.position);\n        } else {\n          cameraRef.current.position.set(0, 1.6, 5);\n        }\n      } else {\n        cameraRef.current.position.set(0, 0, 5);\n      }\n    }\n  }, [selectedRoom, controlMode, displayMode, personViewPreset]);\n\n  // Update camera position when zoom changes (for 3D mode).\n  useEffect(() => {\n    if (cameraRef.current && displayMode === \"3D\") {\n      if (controlMode === \"orbit\") {\n        cameraRef.current.position.z = 5 * zoomFactor;\n      } else if (controlMode === \"person\") {\n        const preset = personViewOptions.find(opt => opt.label === personViewPreset);\n        if (preset) {\n          // Scale the z component only.\n          cameraRef.current.position.set(preset.position[0], preset.position[1], preset.position[2] * zoomFactor);\n        }\n      }\n    }\n  }, [zoomFactor, displayMode, controlMode, personViewPreset]);\n  const zoomIn = () => setZoomFactor(prev => Math.max(prev * 0.9, 0.5));\n  const zoomOut = () => setZoomFactor(prev => prev / 0.9);\n  const toggleControlMode = () => {\n    setControlMode(prev => prev === \"orbit\" ? \"person\" : \"orbit\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-nav-container\",\n      children: roomsData.map(room => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `room-nav-item ${selectedRoom.id === room.id ? 'active' : ''}`,\n        onClick: () => setSelectedRoom(room),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-title\",\n          children: room.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)\n      }, room.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"model-viewer\",\n      children: /*#__PURE__*/_jsxDEV(Canvas, {\n        children: [displayMode === \"3D\" ? /*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n          makeDefault: true,\n          ref: cameraRef,\n          position: controlMode === \"person\" ? ((_personViewOptions$fi = personViewOptions.find(opt => opt.label === personViewPreset)) === null || _personViewOptions$fi === void 0 ? void 0 : _personViewOptions$fi.position) || [0, 1.6, 5] : [0, 0, 5 * zoomFactor],\n          fov: 75\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(OrthographicCamera, {\n          makeDefault: true,\n          ref: cameraRef,\n          position: [0, 50, 0],\n          zoom: 50 * zoomFactor,\n          near: 0.1,\n          far: 1000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n          intensity: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n          position: [10, 10, 10]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(Html, {\n            center: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading 3D Model...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 31\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(SuiteModel, {\n            modelPath: selectedRoom.modelPath\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n          ref: controlsRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomIn,\n        className: \"zoom-button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/icons/zoom_in.svg\",\n          alt: \"Zoom In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomOut,\n        className: \"zoom-button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/icons/zoom_out.svg\",\n          alt: \"Zoom Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-toggle-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `display-tab ${displayMode === '3D' ? 'active' : ''}`,\n          onClick: () => setDisplayMode('3D'),\n          children: \"3D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `display-tab ${displayMode === '2D' ? 'active' : ''}`,\n          onClick: () => setDisplayMode('2D'),\n          children: \"2D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleControlMode,\n        className: `control-button ${controlMode === 'person' ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/icons/person_view.svg\",\n          alt: \"Person View\",\n          className: \"person-view-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), \"Person View\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), controlMode === 'person' && /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"person-view-dropdown\",\n        value: personViewPreset,\n        onChange: e => setPersonViewPreset(e.target.value),\n        children: personViewOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.label,\n          children: option.label\n        }, option.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"dzUd56OF9VTaxuOGJ5y6jS3PGsk=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"RoomNav\");\n$RefreshReg$(_c2, \"SuiteModel\");\n$RefreshReg$(_c3, \"ControlPanel\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","Suspense","useRef","useEffect","Canvas","OrbitControls","PerspectiveCamera","OrthographicCamera","useGLTF","Html","jsxDEV","_jsxDEV","RoomNav","rooms","selectedRoom","onSelectRoom","className","children","map","room","id","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","SuiteModel","modelPath","_s","scene","object","_c2","ControlPanel","onZoomIn","onZoomOut","displayMode","setDisplayMode","controlMode","toggleControlMode","personViewPreset","setPersonViewPreset","personViewOptions","src","alt","value","onChange","e","target","option","label","_c3","App","_s2","_personViewOptions$fi","roomsData","position","setSelectedRoom","setControlMode","zoomFactor","setZoomFactor","cameraRef","controlsRef","current","set","reset","preset","find","opt","z","zoomIn","prev","Math","max","zoomOut","makeDefault","ref","fov","zoom","near","far","intensity","fallback","center","_c4","$RefreshReg$"],"sources":["C:/Users/elian/Downloads/3D Rooms/src/app.js"],"sourcesContent":["import React, { useState, Suspense, useRef, useEffect } from 'react';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport {\r\n  OrbitControls,\r\n  PerspectiveCamera,\r\n  OrthographicCamera,\r\n  useGLTF,\r\n  Html\r\n} from '@react-three/drei';\r\nimport './index.css';\r\n\r\n// Room Navigation Component (using your original button style)\r\nconst RoomNav = ({ rooms, selectedRoom, onSelectRoom }) => {\r\n  return (\r\n    <div className=\"room-nav-container\">\r\n      {rooms.map((room) => (\r\n        <button\r\n          key={room.id}\r\n          className={`room-nav-item ${selectedRoom.id === room.id ? 'active' : ''}`}\r\n          onClick={() => onSelectRoom(room)}\r\n        >\r\n          <div className=\"room-title\">{room.title}</div>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Component to load and display the 3D model for the selected suite.\r\nconst SuiteModel = ({ modelPath }) => {\r\n  const { scene } = useGLTF(modelPath);\r\n  return <primitive object={scene} />;\r\n};\r\n\r\n// Control Panel for zoom, display mode, and Person View toggle/dropâ€‘down.\r\nconst ControlPanel = ({\r\n  onZoomIn,\r\n  onZoomOut,\r\n  displayMode,\r\n  setDisplayMode,\r\n  controlMode,\r\n  toggleControlMode,\r\n  personViewPreset,\r\n  setPersonViewPreset,\r\n  personViewOptions\r\n}) => {\r\n  return (\r\n    <div className=\"control-panel\">\r\n      <button onClick={onZoomIn} className=\"zoom-button\">\r\n        <img src=\"/icons/zoom_in.svg\" alt=\"Zoom In\" />\r\n      </button>\r\n      <button onClick={onZoomOut} className=\"zoom-button\">\r\n        <img src=\"/icons/zoom_out.svg\" alt=\"Zoom Out\" />\r\n      </button>\r\n      <div className=\"display-toggle-tabs\">\r\n        <button\r\n          className={`display-tab ${displayMode === '3D' ? 'active' : ''}`}\r\n          onClick={() => setDisplayMode('3D')}\r\n        >\r\n          3D\r\n        </button>\r\n        <button\r\n          className={`display-tab ${displayMode === '2D' ? 'active' : ''}`}\r\n          onClick={() => setDisplayMode('2D')}\r\n        >\r\n          2D\r\n        </button>\r\n      </div>\r\n      <button\r\n        onClick={toggleControlMode}\r\n        className={`control-button ${controlMode === 'person' ? 'active' : ''}`}\r\n      >\r\n        <img src=\"/icons/person_view.svg\" alt=\"Person View\" className=\"person-view-icon\" />\r\n        Person View\r\n      </button>\r\n      {controlMode === 'person' && (\r\n        <select\r\n          className=\"person-view-dropdown\"\r\n          value={personViewPreset}\r\n          onChange={(e) => setPersonViewPreset(e.target.value)}\r\n        >\r\n          {personViewOptions.map((option) => (\r\n            <option key={option.label} value={option.label}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  // Room (suite) data.\r\n  const roomsData = [\r\n    { id: 1, title: 'Suite 1', modelPath: '/models/suite1.glb' },\r\n    { id: 2, title: 'Suite 2', modelPath: '/models/suite2.glb' },\r\n    { id: 3, title: 'Suite 3', modelPath: '/models/suite3.glb' },\r\n  ];\r\n\r\n  // Person View presets (each with a label and a camera position).\r\n  const personViewOptions = [\r\n    { label: \"Standard\", position: [0, 1.6, 5] },\r\n    { label: \"Corner\", position: [2, 1.6, 5] },\r\n    { label: \"Back\", position: [0, 1.6, -5] }\r\n  ];\r\n\r\n  // State for selected room, display mode, control mode, zoom factor, and person view preset.\r\n  const [selectedRoom, setSelectedRoom] = useState(roomsData[0]);\r\n  const [displayMode, setDisplayMode] = useState(\"3D\"); // \"3D\" uses Perspective, \"2D\" uses Orthographic.\r\n  const [controlMode, setControlMode] = useState(\"orbit\"); // \"orbit\" or \"person\"\r\n  const [zoomFactor, setZoomFactor] = useState(1);\r\n  const [personViewPreset, setPersonViewPreset] = useState(\"Standard\");\r\n\r\n  // Refs for the camera and OrbitControls.\r\n  const cameraRef = useRef();\r\n  const controlsRef = useRef();\r\n\r\n  // When switching rooms, control mode, or person view preset, reset zoom and update camera position.\r\n  useEffect(() => {\r\n    setZoomFactor(1);\r\n    if (controlsRef.current) {\r\n      if (controlMode === \"person\") {\r\n        // In person view, we aim for eye-level.\r\n        controlsRef.current.target.set(0, 1.6, 0);\r\n      } else {\r\n        controlsRef.current.target.set(0, 0, 0);\r\n      }\r\n      controlsRef.current.reset();\r\n    }\r\n    if (cameraRef.current && displayMode === \"3D\") {\r\n      if (controlMode === \"person\") {\r\n        const preset = personViewOptions.find(opt => opt.label === personViewPreset);\r\n        if (preset) {\r\n          cameraRef.current.position.set(...preset.position);\r\n        } else {\r\n          cameraRef.current.position.set(0, 1.6, 5);\r\n        }\r\n      } else {\r\n        cameraRef.current.position.set(0, 0, 5);\r\n      }\r\n    }\r\n  }, [selectedRoom, controlMode, displayMode, personViewPreset]);\r\n\r\n  // Update camera position when zoom changes (for 3D mode).\r\n  useEffect(() => {\r\n    if (cameraRef.current && displayMode === \"3D\") {\r\n      if (controlMode === \"orbit\") {\r\n        cameraRef.current.position.z = 5 * zoomFactor;\r\n      } else if (controlMode === \"person\") {\r\n        const preset = personViewOptions.find(opt => opt.label === personViewPreset);\r\n        if (preset) {\r\n          // Scale the z component only.\r\n          cameraRef.current.position.set(\r\n            preset.position[0],\r\n            preset.position[1],\r\n            preset.position[2] * zoomFactor\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }, [zoomFactor, displayMode, controlMode, personViewPreset]);\r\n\r\n  const zoomIn = () => setZoomFactor((prev) => Math.max(prev * 0.9, 0.5));\r\n  const zoomOut = () => setZoomFactor((prev) => prev / 0.9);\r\n  const toggleControlMode = () => {\r\n    setControlMode((prev) => (prev === \"orbit\" ? \"person\" : \"orbit\"));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* Room Navigation */}\r\n      <div className=\"room-nav-container\">\r\n        {roomsData.map((room) => (\r\n          <button\r\n            key={room.id}\r\n            className={`room-nav-item ${selectedRoom.id === room.id ? 'active' : ''}`}\r\n            onClick={() => setSelectedRoom(room)}\r\n          >\r\n            <div className=\"room-title\">{room.title}</div>\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* 3D Model Viewer Container */}\r\n      <div className=\"model-viewer\">\r\n        <Canvas>\r\n          {displayMode === \"3D\" ? (\r\n            <PerspectiveCamera\r\n              makeDefault\r\n              ref={cameraRef}\r\n              position={\r\n                controlMode === \"person\"\r\n                  ? personViewOptions.find(opt => opt.label === personViewPreset)?.position || [0, 1.6, 5]\r\n                  : [0, 0, 5 * zoomFactor]\r\n              }\r\n              fov={75}\r\n            />\r\n          ) : (\r\n            <OrthographicCamera\r\n              makeDefault\r\n              ref={cameraRef}\r\n              position={[0, 50, 0]}\r\n              zoom={50 * zoomFactor}\r\n              near={0.1}\r\n              far={1000}\r\n            />\r\n          )}\r\n          <ambientLight intensity={0.5} />\r\n          <pointLight position={[10, 10, 10]} />\r\n          <Suspense fallback={<Html center><div>Loading 3D Model...</div></Html>}>\r\n            <SuiteModel modelPath={selectedRoom.modelPath} />\r\n          </Suspense>\r\n          <OrbitControls ref={controlsRef} />\r\n        </Canvas>\r\n      </div>\r\n\r\n      {/* Control Panel for Zoom, Display Mode Tabs, and Person View Toggle */}\r\n      <div className=\"control-panel\">\r\n        <button onClick={zoomIn} className=\"zoom-button\">\r\n          <img src=\"/icons/zoom_in.svg\" alt=\"Zoom In\" />\r\n        </button>\r\n        <button onClick={zoomOut} className=\"zoom-button\">\r\n          <img src=\"/icons/zoom_out.svg\" alt=\"Zoom Out\" />\r\n        </button>\r\n        <div className=\"display-toggle-tabs\">\r\n          <button\r\n            className={`display-tab ${displayMode === '3D' ? 'active' : ''}`}\r\n            onClick={() => setDisplayMode('3D')}\r\n          >\r\n            3D\r\n          </button>\r\n          <button\r\n            className={`display-tab ${displayMode === '2D' ? 'active' : ''}`}\r\n            onClick={() => setDisplayMode('2D')}\r\n          >\r\n            2D\r\n          </button>\r\n        </div>\r\n        <button\r\n          onClick={toggleControlMode}\r\n          className={`control-button ${controlMode === 'person' ? 'active' : ''}`}\r\n        >\r\n          <img src=\"/icons/person_view.svg\" alt=\"Person View\" className=\"person-view-icon\" />\r\n          Person View\r\n        </button>\r\n        {controlMode === 'person' && (\r\n          <select\r\n            className=\"person-view-dropdown\"\r\n            value={personViewPreset}\r\n            onChange={(e) => setPersonViewPreset(e.target.value)}\r\n          >\r\n            {personViewOptions.map((option) => (\r\n              <option key={option.label} value={option.label}>\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}